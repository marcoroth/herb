# frozen_string_literal: true

require_relative "../test_helper"

module Lexer
  class Utf8Test < Minitest::Spec
    include SnapshotUtils

    test "single UTF-8 character - a-umlaut (2 bytes)" do
      assert_lexed_snapshot("Ã¤")
    end

    test "single UTF-8 character - euro sign (3 bytes)" do
      assert_lexed_snapshot("â‚¬")
    end

    test "single UTF-8 character - emoji (4 bytes)" do
      assert_lexed_snapshot("ðŸŒ¿")
    end

    test "multiple UTF-8 characters" do
      assert_lexed_snapshot("Ã¤Ã¶Ã¼")
    end

    test "mixed ASCII and UTF-8" do
      assert_lexed_snapshot("Hello Ã¤ World")
    end

    test "UTF-8 in HTML tag" do
      assert_lexed_snapshot("<div>Ã¤</div>")
    end

    test "UTF-8 in attribute value" do
      assert_lexed_snapshot('<div title="MÃ¼nchÃ«n">content</div>')
    end

    test "non-breaking space (should use TOKEN_NBSP)" do
      assert_lexed_snapshot(" ")
    end

    test "various Unicode symbols" do
      assert_lexed_snapshot("â–Œâ–ºâ—„â–²â–¼")
    end

    test "emoji sequence" do
      assert_lexed_snapshot("ðŸŒ¿ðŸ”¥ðŸ’§âš¡")
    end

    test "Chinese characters" do
      assert_lexed_snapshot("ä½ å¥½ä¸–ç•Œ")
    end

    test "Arabic text" do
      assert_lexed_snapshot("Ù…Ø±Ø­Ø¨Ø§")
    end

    test "mixed UTF-8 with HTML structure" do
      assert_lexed_snapshot('<h1 title="CafÃ©">BjÃ¶rk & FrÃ©dÃ©ric</h1>')
    end

    test "UTF-8 line breaks and positioning" do
      assert_lexed_snapshot("Ã¤\nÃ¶\nÃ¼")
    end

    test "complex UTF-8 with ERB" do
      assert_lexed_snapshot('<%= "HÃ©llÃ¶ #{wÃ¶rld}" %>')
    end
  end
end
