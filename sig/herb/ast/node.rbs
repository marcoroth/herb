# Generated from lib/herb/ast/node.rb with RBS::Inline

module Herb
  module AST
    class Node
      # : String
      attr_reader type: untyped

      # : Location
      attr_reader location: untyped

      # : Array[Herb::Errors::Error]
      attr_reader errors: untyped

      # : (String, Location, Array[Herb::Errors::Error]) -> void
      def initialize: (String, Location, Array[Herb::Errors::Error]) -> void

      # : () -> { type: String, location: { line: Integer, column: Integer, length: Integer }, errors: Array[{ type: String, location: { start: { line: Integer, column: Integer }, end: { line: Integer, column: Integer } }, message: String }]}
      def to_hash: () -> { type: String, location: { line: Integer, column: Integer, length: Integer }, errors: Array[{ type: String, location: { start: { line: Integer, column: Integer }, end: { line: Integer, column: Integer } }, message: String }] }

      # : () -> String
      def class_name: () -> String

      # : () -> String
      def node_name: () -> String

      # : (?untyped) -> String
      def to_json: (?untyped) -> String

      # : (?prefix: String) -> String
      def inspect_errors: (?prefix: String) -> String

      # : (Array[Herb::AST::Node|Herb::Errors::Error], ?item_name: String, ?prefix: String) -> String
      def inspect_array: (Array[Herb::AST::Node | Herb::Errors::Error], ?item_name: String, ?prefix: String) -> String

      # : (?Integer) -> String
      def tree_inspect: (?Integer) -> String
    end
  end
end
